1. Despues de instalar python en nuestro equipo:
    a) Abrimos una terminal y tecleamos
            python3
    b) Esto nos mostrara el entorno de linea de comandos
       de python el cual es un ciclo de lectura, evaluacion
       e impresion...
            Read
            Evaluate
            Print
            Loop (para volver al estado inicial de espera)
    c) El proceso anterior se conoce como REPL
    d) Una vez abierto, el REPL nos mostrara un prompt
       representado por >>> que nos indica que esta listo
       para recibir un comando o cualquier otra cosa para
       evaluar...
    d) Una vez que recibe algun comando o expresion, lo 
       evalua y arroja un resultado si la expresion es
       evaluable

       TRUCO: si tecleamos el underscore (_) imprimira el
       ultimo resultado numerico obtenido.
       OJO: este truco solo funciona solo en el entorno de REPL

2. Para poder ver el Zen de Python lo podemos hacer desde dentro
   del REPL ejecutando el siguiente comando:
      import this

3. Para importar modulos o bibliotecas de clases en el REPL usamos
   la palabra reservada import.

   Ejemplo: Para importar el modulo matematico para poder usar la 
   raiz cuadrada tecleamos

   >>> import math

   Y para usar alguno de los metodos o funciones se puede hacer así:
   >>> x = math.sqrt(25)
   >>> 5.0

   Como podemos ver, la llamada al metodo o funcion se hace mediante 
   el uso del nombre del modulo seguido de un punto seguido del metodo
   o funcion que queremos utilizar.

      nombre_modulo_o_clase.funcion_o_metodo

   Si queremos usar solo el metodo tenemos que usar en vez del import:
      from math import sqrt
   
   Y lo usariamos de la siguiente forma:
   >>> x = sqrt(25)
   >>> 5.0

   Incluso si quisieramos acortar mas el nombre podriamos hacer lo siguiente:
      from math import sqrt as sq

   Y lo usariamos de la siguiente forma:
   >>> x = sq(25)
   >>> 5.0

4. Para obtener ayuda acerca de los modulos u objetos que podemos usar
   en python tecleamos el comando help...
   El cual nos indicara que se puede mandar llamar tambien de la siguiente
   forma: help (objeto)... 
   Lo cual provocara que nos aparezca la documentacion relacionada a objeto
   TIP: tambien podemos usar help(objeto.metodo) lo cual nos desplegara
   informacion tecnica acerca del metoto del objeto.

5. El metodo int es muy versatil, ya que puede realizar:
   a) Conversion de un entero en forma de cadena a numero entero:
         >>>int("1234")
         1234
      OJO: NO funciona con cadenas que no son representacion de un entero
         >>> int("1234.77")
         Traceback (most recent call last):
            File "<stdin>", line 1, in <module>
         ValueError: invalid literal for int() with base 10: '1234.77'
   b) Conversion a entero de una cadena que representa un numero en una base
      numerica:
         >>> int("1001001",2)    # Cadena binaria en base numerica 2 o binario
         73
         >>> int("10000", 3)     #Cadena numerica en base numerica 3
         81

6. Cualquier numero que se meta con punto decimal o en notacion cientifica 
   python lo interpretara como un numero de coma flotante. Ejemplos:
   a) .1
   b) 3.1416
   c) 1.23e3
   d) 1.24e-3
   NOTAS: 
      REPL siempre imprimira la forma mas legible del numero
      Cualquier operacion entre un flotante y un entero promovera
      el resultado a un numero flotante

7. La funcion float() sirve para convertir cualquier expresion valida en un numero
   de coma flotante:
   a) >>> float(7)
      7
   b) >>> float("1.618")
      1.618
   c) >>> float("nan")
      nan
   d) >>> float("inf") 'infinito positivo
      inf
      >>> float("-inf") 'infinito negativo
      -inf

8. La representacion de Null en Pythno es None y se usa así:
   a) >>> a = None
      >>> a  is None
      True

9. Como ver la svariables que he estado utilizando en el REPL:
   a) dir() will give you the list of in-scope variables
   b) globals() will give you a dictionary of global variables
   c) locals() will give you a dictionary of local variables